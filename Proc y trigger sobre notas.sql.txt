/*ejercicio 1*/
IF OBJECT_ID('MEDIA_HISTORICO') IS NULL
BEGIN
    CREATE TABLE MEDIA_HISTORICO (
        IDA INT,
        MEDIA DECIMAL(5,2),
        FECHA DATETIME
    );
END;
GO

IF OBJECT_ID('GuardarMediaAsignatura') IS NOT NULL
    DROP PROCEDURE GuardarMediaAsignatura;
GO

CREATE PROCEDURE GuardarMediaAsignatura
    @IDA INT
AS
BEGIN
    DECLARE @Media DECIMAL(5,2);

    SELECT @Media = AVG(Calificacion)
    FROM NOTAS
    WHERE IDA = @IDA;

    INSERT INTO MEDIA_HISTORICO (IDA, MEDIA, FECHA)
    VALUES (@IDA, @Media, GETDATE());
END;
GO

EXEC GuardarMediaAsignatura @IDA = 3;




/*ejercicio 2*/
IF OBJECT_ID('MEDIA_ACTUAL') IS NULL
BEGIN
    CREATE TABLE MEDIA_ACTUAL (
        IDA INT PRIMARY KEY,
        MEDIA DECIMAL(5,2)
    );
END;
GO

IF OBJECT_ID('TRG_ActualizarMedia') IS NOT NULL
    DROP TRIGGER TRG_ActualizarMedia;
GO

CREATE TRIGGER TRG_ActualizarMedia
ON NOTAS
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
    SET NOCOUNT ON;


    DECLARE @IDAS TABLE (IDA INT);

    INSERT INTO @IDAS(IDA)
    SELECT DISTINCT IDA FROM inserted
    UNION
    SELECT DISTINCT IDA FROM deleted;

    MERGE MEDIA_ACTUAL AS TARGET
    USING (
        SELECT IDA, AVG(Calificacion) AS MEDIA
        FROM NOTAS
        WHERE IDA IN (SELECT IDA FROM @IDAS)
        GROUP BY IDA
    ) AS SOURCE
    ON TARGET.IDA = SOURCE.IDA

    WHEN MATCHED THEN
        UPDATE SET MEDIA = SOURCE.MEDIA

    WHEN NOT MATCHED BY TARGET THEN
        INSERT (IDA, MEDIA) VALUES (SOURCE.IDA, SOURCE.MEDIA);
END;
GO

